// Includes the Servo library
#include <Servo.h>. 
// Defines Tirg and Echo pins of the Ultrasonic Sensor

  const int trigPin = 10;
  const int echoPin = 11;
 
// Variables for the duration and the distance
  long duration;
  int distance;
 

   const int aled = 2; //2. pini aled  olarak tanýmladýk.
   const int bled = 3; //3. pini bled  olarak tanýmladýk.
   const int buzzer = 6; //6. pini buzzer  olarak tanýmladýk.


Servo myServo; // Creates a servo object for controlling the servo motor

void setup() 
{
    pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
    pinMode(echoPin, INPUT); // Sets the echoPin as an Input
    
    pinMode(aled , OUTPUT); //aled'i çýkýþ olarak tanýmladýk.
    pinMode(bled , OUTPUT); //bled'i çýkýþ olarak tanýmladýk.
    pinMode(buzzer , OUTPUT); //buzzer'i çýkýþ olarak tanýmladýk.
    
    Serial.begin(9600);
    myServo.attach(12); // Defines on which pin is the servo motor attached
}

void loop()
{
  // rotates the servo motor from 15 to 165 degrees
  
    for(int i=0;i<=180;i++){  
     myServo.write(i);
    delay(20);
    distance = calculateDistance();// Calls a function for calculating the distance measured by the Ultrasonic sensor for each degree

  
    Serial.print(i); // Sends the current degree into the Serial Port
    Serial.print(","); // Sends addition character right next to the previous value needed later in the Processing IDE for indexing
    Serial.print(distance); // Sends the distance value into the Serial Port
    Serial.print("."); // Sends addition character right next to the previous value needed later in the Processing IDE for indexing
  }

  
  // Repeats the previous lines from 165 to 15 degrees
  for(int i=165;i>15;i--)
  {  
      myServo.write(i);
      delay(20);
      distance = calculateDistance();
      Serial.print(i);
      Serial.print(",");
      Serial.print(distance);
      Serial.print(".");
  }
}

// Function for calculating the distance measured by the Ultrasonic sensor

int calculateDistance()
{ 
  // Sets the trigPin on HIGH state for 10 micro seconds
 
      digitalWrite(trigPin, LOW); 
      delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
      digitalWrite(trigPin, HIGH); 
      delayMicroseconds(10);
     digitalWrite(trigPin, LOW);
      duration = pulseIn(echoPin, HIGH); // Reads the echoPin, returns the sound wave travel time in microseconds
      distance= duration*0.034/2;

 
      if (distance <= 15) //mesafemiz 10 cm den kýsa ise bunlarý yapar.
 
    {
          digitalWrite(aled , HIGH); //aled'e enerji verdik.
          digitalWrite(bled , HIGH); //bled'e enerji verdik.
          delay(500); 
          digitalWrite(buzzer , HIGH); //buzzer'e enerji verdik.
          delay(500); //0,25 saniyede bir tekrarlanmasýný saðladýk.
          digitalWrite(buzzer , LOW); //buzzer'in enerjisini kestik.
          digitalWrite(bled , LOW); //bled'in enerjisini kestik.
 
    }
    
    return distance;
}